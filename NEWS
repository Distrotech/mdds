  * fixed a bug in flat_segment_tree::shift_right() where leaf nodes were
    not properly linked under certain conditions.

  * fixed a bug in flat_segment_tree::operator==() where two different
    containers were incorrectly evaluated to be equal.

mdds 0.5.1

  * fixed build issues on Windows, using MSVC compilers.

mdds 0.5.0

  * flat_segment_tree's search methods now return a std::pair of 
    const_iterator and bool, instead of just returning bool.  

  * fixed a weird enum value mis-handling with mixed_type_matrix when 
    compiled with MSVC++.

  * added new insert() method to flat_segment_tree that takes a 
    positional hint in order to speed up insertion speed.  Also, all 
    three insert() methods now return the start position of the 
    segment that an inserted segment belongs to.  

  * slight performance improvement on the insert methods of 
    flat_segment_tree.  

  * slight performance improvement on the iterators of 
    flat_segment_tree.

  * re-organized the structure of flat_segment_tree to split it into 
    multiple headers.  

  * properly support prefix, docdir, includedir configure options.
  
  * support DESTDIR environment variable for make install.  

mdds 0.4.0

  * implemented mixed_type_matrix.

mdds 0.3.1

  * added support for boost::unordered_map (boost) and std::hash_map 
    (stlport) in addition to C++0x's std::unordered_map.

mdds 0.3.0

  * implemented point_quad_tree.

mdds 0.2.1

  * added example files on how to use these data structures.

  * fixed a bug in segment_tree::search_result object, to make it work 
    with empty result set.  

  * fixed segment_tree to make it really usable outside of unit test 
    code.  

mdds 0.2.0

  * other general performance improvements.

  * lots of code cleanups.

  * support for search result iterator in segment_tree and 
    rectangle_set, for better search performance.  

  * implemented rectnagle_set.

  * fixed lots of bugs in the segment_tree implementation.

mdds 0.1.2

  * implemented segment_tree.

  * node_base class is now without virtual methods to avoid vtable 
    generation.  
