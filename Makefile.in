prefix=@prefix@
datarootdir=@datarootdir@
PACKAGE_TARNAME=@PACKAGE_TARNAME@

OBJDIR=@OBJDIR@
SRCDIR=@SRCDIR@
INCDIR=@INCDIR@
MISCDIR=@MISCDIR@
QUICKCHECKDIR=@QUICKCHECKDIR@
INSTALL_INCDIR=@includedir@/mdds-@API_VERSION@
INSTALL_DOCDIR=@docdir@-@API_VERSION@

CPPFLAGS=-I$(INCDIR) @CPPFLAGS@
LDFLAGS=

EXECS= \
	flat_segment_tree_test \
	segment_tree_test \
	point_quad_tree_test \
	multi_type_matrix_test \
	rectangle_set_test \
	multi_type_vector_test_default \
	multi_type_vector_test_custom \
	sorted_string_map_test

HEADERS= \
	@top_srcdir@/$(INCDIR)/mdds/flat_segment_tree_def.inl \
	@top_srcdir@/$(INCDIR)/mdds/flat_segment_tree.hpp \
	@top_srcdir@/$(INCDIR)/mdds/flat_segment_tree_itr.hpp \
	@top_srcdir@/$(INCDIR)/mdds/global.hpp \
	@top_srcdir@/$(INCDIR)/mdds/multi_type_matrix.hpp \
	@top_srcdir@/$(INCDIR)/mdds/multi_type_matrix_def.inl \
	@top_srcdir@/$(INCDIR)/mdds/node.hpp \
	@top_srcdir@/$(INCDIR)/mdds/point_quad_tree.hpp \
	@top_srcdir@/$(INCDIR)/mdds/quad_node.hpp \
	@top_srcdir@/$(INCDIR)/mdds/rectangle_set_def.inl \
	@top_srcdir@/$(INCDIR)/mdds/rectangle_set.hpp \
	@top_srcdir@/$(INCDIR)/mdds/segment_tree.hpp \
	@top_srcdir@/$(INCDIR)/mdds/sorted_string_map_def.inl \
	@top_srcdir@/$(INCDIR)/mdds/sorted_string_map.hpp \
	@top_srcdir@/$(INCDIR)/mdds/multi_type_vector.hpp \
	@top_srcdir@/$(INCDIR)/mdds/multi_type_vector_custom_func1.hpp \
	@top_srcdir@/$(INCDIR)/mdds/multi_type_vector_custom_func2.hpp \
	@top_srcdir@/$(INCDIR)/mdds/multi_type_vector_custom_func3.hpp \
	@top_srcdir@/$(INCDIR)/mdds/multi_type_vector_itr.hpp \
	@top_srcdir@/$(INCDIR)/mdds/multi_type_vector_trait.hpp \
	@top_srcdir@/$(INCDIR)/mdds/multi_type_vector_types.hpp \
	@top_srcdir@/$(INCDIR)/mdds/multi_type_vector_macro.hpp \
	@top_srcdir@/$(INCDIR)/mdds/multi_type_vector_def.inl

DEPENDS= \
	$(HEADERS)

TESTS = \
	test.fst \
	test.recset \
	test.pqt \
	test.st \
	test.mtv \
	test.mtmatrix \
	test.ssmap

TESTS_MEM = \
	test.pqt.mem \
	test.recset.mem \
	test.fst.mem \
	test.st.mem \
	test.mtmatrix \
	test.ssmap

# You may add $(TESTS_MEM) if valgrind is available on your platform
ALL_TESTS = $(TESTS)

nothing:
	@echo There is nothing to build since this is a header-only library.

all: $(EXECS)

pre:
	mkdir -p $(OBJDIR)

$(OBJDIR)/flat_segment_tree_test.o: @top_srcdir@/$(SRCDIR)/flat_segment_tree_test.cpp $(DEPENDS)
	$(CXX) $(CPPFLAGS) -c -o $@ @top_srcdir@/$(SRCDIR)/flat_segment_tree_test.cpp

$(OBJDIR)/segment_tree_test.o: @top_srcdir@/$(SRCDIR)/segment_tree_test.cpp  $(DEPENDS)
	$(CXX) $(CPPFLAGS) -c -o $@ @top_srcdir@/$(SRCDIR)/segment_tree_test.cpp

$(OBJDIR)/rectangle_set_test.o: @top_srcdir@/$(SRCDIR)/rectangle_set_test.cpp  $(DEPENDS)
	$(CXX) $(CPPFLAGS) -c -o $@ @top_srcdir@/$(SRCDIR)/rectangle_set_test.cpp

$(OBJDIR)/point_quad_tree_test.o: @top_srcdir@/$(SRCDIR)/point_quad_tree_test.cpp $(DEPENDS)
	$(CXX) $(CPPFLAGS) -c -o $@ @top_srcdir@/$(SRCDIR)/point_quad_tree_test.cpp

$(OBJDIR)/multi_type_vector_test_default.o: @top_srcdir@/$(SRCDIR)/multi_type_vector_test_default.cpp $(DEPENDS)
	$(CXX) $(CPPFLAGS) -c -o $@ @top_srcdir@/$(SRCDIR)/multi_type_vector_test_default.cpp

$(OBJDIR)/multi_type_vector_test_custom.o: @top_srcdir@/$(SRCDIR)/multi_type_vector_test_custom.cpp $(DEPENDS)
	$(CXX) $(CPPFLAGS) -c -o $@ @top_srcdir@/$(SRCDIR)/multi_type_vector_test_custom.cpp

$(OBJDIR)/multi_type_vector_test_perf.o: @top_srcdir@/$(SRCDIR)/multi_type_vector_test_perf.cpp $(DEPENDS)
	$(CXX) $(CPPFLAGS) -c -o $@ @top_srcdir@/$(SRCDIR)/multi_type_vector_test_perf.cpp

$(OBJDIR)/multi_type_matrix_test.o: @top_srcdir@/$(SRCDIR)/multi_type_matrix_test.cpp $(DEPENDS)
	$(CXX) $(CPPFLAGS) -c -o $@ @top_srcdir@/$(SRCDIR)/multi_type_matrix_test.cpp

$(OBJDIR)/sorted_string_map_test.o: @top_srcdir@/$(SRCDIR)/sorted_string_map_test.cpp $(DEPENDS)
	$(CXX) $(CPPFLAGS) -c -o $@ @top_srcdir@/$(SRCDIR)/sorted_string_map_test.cpp

$(OBJDIR)/trie_map_test.o: @top_srcdir@/$(SRCDIR)/trie_map_test.cpp $(DEPENDS)
	$(CXX) $(CPPFLAGS) -c -o $@ @top_srcdir@/$(SRCDIR)/trie_map_test.cpp

flat_segment_tree_test: pre $(OBJDIR)/flat_segment_tree_test.o
	$(CXX) $(LDFLAGS) $(OBJDIR)/flat_segment_tree_test.o -o $@

segment_tree_test: pre $(OBJDIR)/segment_tree_test.o
	$(CXX) $(LDFLAGS) $(OBJDIR)/segment_tree_test.o -o $@

rectangle_set_test: pre $(OBJDIR)/rectangle_set_test.o
	$(CXX) $(LDFLAGS) $(OBJDIR)/rectangle_set_test.o -o $@

point_quad_tree_test: pre $(OBJDIR)/point_quad_tree_test.o
	$(CXX) $(LDFLAGS) $(OBJDIR)/point_quad_tree_test.o -o $@

multi_type_vector_test_default: pre $(OBJDIR)/multi_type_vector_test_default.o
	$(CXX) $(LDFLAGS) $(OBJDIR)/multi_type_vector_test_default.o -o $@

multi_type_vector_test_custom: pre $(OBJDIR)/multi_type_vector_test_custom.o
	$(CXX) $(LDFLAGS) $(OBJDIR)/multi_type_vector_test_custom.o -o $@

multi_type_vector_test_perf: pre $(OBJDIR)/multi_type_vector_test_perf.o
	$(CXX) $(LDFLAGS) $(OBJDIR)/multi_type_vector_test_perf.o -o $@

multi_type_matrix_test: pre $(OBJDIR)/multi_type_matrix_test.o
	$(CXX) $(LDFLAGS) $(OBJDIR)/multi_type_matrix_test.o -o $@

sorted_string_map_test: pre $(OBJDIR)/sorted_string_map_test.o
	$(CXX) $(LDFLAGS) $(OBJDIR)/sorted_string_map_test.o -o $@

trie_map_test: pre $(OBJDIR)/trie_map_test.o
	$(CXX) $(LDFLAGS) $(OBJDIR)/trie_map_test.o -o $@

multi_type_vector_test: multi_type_vector_test_default multi_type_vector_test_custom multi_type_vector_test_perf

stlperf_test: pre @top_srcdir@/$(SRCDIR)/stlperf_test.cpp
	$(CXX) $(LDFLAGS) $(CPPFLAGS) @top_srcdir@/$(SRCDIR)/stlperf_test.cpp -o $@

$(OBJDIR)/template_test.o: @top_srcdir@/$(SRCDIR)/template_test.cpp $(DEPENDS)
	$(CXX) $(CPPFLAGS) -c -o $@ @top_srcdir@/$(SRCDIR)/template_test.cpp

test.fst: flat_segment_tree_test
	./flat_segment_tree_test func

test.fst.perf: flat_segment_tree_test
	./flat_segment_tree_test perf

test.fst.mem: flat_segment_tree_test
	valgrind --tool=memcheck --leak-check=full ./flat_segment_tree_test func

test.pqt: point_quad_tree_test
	./point_quad_tree_test

test.pqt.mem: point_quad_tree_test
	valgrind --tool=memcheck --leak-check=full ./point_quad_tree_test

test.recset: rectangle_set_test
	./rectangle_set_test func

test.recset.perf: rectangle_set_test
	./rectangle_set_test perf

test.recset.mem: rectangle_set_test
	valgrind --tool=memcheck --leak-check=full ./rectangle_set_test func

test.st: segment_tree_test
	./segment_tree_test func

test.st.perf: segment_tree_test
	./segment_tree_test perf

test.st.mem: segment_tree_test
	valgrind --tool=memcheck --leak-check=full ./segment_tree_test func

test.mtv: multi_type_vector_test_default multi_type_vector_test_custom
	./multi_type_vector_test_default
	./multi_type_vector_test_custom

test.mtv.perf: multi_type_vector_test_perf
	./multi_type_vector_test_perf

test.mtv.mem: multi_type_vector_test_default multi_type_vector_test_custom
	valgrind --tool=memcheck --leak-check=full ./multi_type_vector_test_default
	valgrind --tool=memcheck --leak-check=full ./multi_type_vector_test_custom

test.mtmatrix: multi_type_matrix_test
	./multi_type_matrix_test func

test.mtmatrix.perf: multi_type_matrix_test
	./multi_type_matrix_test perf

test.mtmatrix.mem: multi_type_matrix_test
	valgrind --tool=memcheck --leak-check=full ./multi_type_matrix_test func

test.ssmap: sorted_string_map_test
	./sorted_string_map_test func

test.ssmap.mem: sorted_string_map_test
	valgrind --tool=memcheck --leak-check=full ./sorted_string_map_test func

test.stl: stlperf_test
	./stlperf_test

test.trie: trie_map_test
	./trie_map_test

test.trie.mem: trie_map_test
	valgrind --tool=memcheck --leak-check=full ./trie_map_test

$(QUICKCHECKDIR)/flat_segment_tree.o: $(QUICKCHECKDIR)/flat_segment_tree.cpp $(DEPENDS)
	$(CXX) $(CPPFLAGS) -c -o $@ $<

$(QUICKCHECKDIR)/flat_segment_tree: $(QUICKCHECKDIR)/flat_segment_tree.o pre
	$(CXX) $(LDFLAGS) $< -o $@

install: $(HEADERS)
	cp -a LICENSE COPYING
	cp -a CHANGELOG NEWS
	install -d $(DESTDIR)$(INSTALL_INCDIR)/mdds
	install -d $(DESTDIR)$(INSTALL_DOCDIR)
	install -d $(DESTDIR)@datarootdir@
	install -d $(DESTDIR)@datarootdir@/pkgconfig
	install -m 644 @top_srcdir@/$(INCDIR)/mdds/*.hpp $(DESTDIR)$(INSTALL_INCDIR)/mdds
	install -m 644 @top_srcdir@/$(INCDIR)/mdds/*.inl $(DESTDIR)$(INSTALL_INCDIR)/mdds
	install -m 644 $(MISCDIR)/mdds.pc $(DESTDIR)@datarootdir@/pkgconfig/mdds-@API_VERSION@.pc
	install -m 644 @top_srcdir@/AUTHORS @top_srcdir@/COPYING @top_srcdir@/NEWS @top_srcdir@/README.md @top_srcdir@/VERSION $(DESTDIR)$(INSTALL_DOCDIR)

check: $(ALL_TESTS)

quickcheck: $(QUICKCHECKDIR)/flat_segment_tree
	$(QUICKCHECKDIR)/flat_segment_tree

clean:
	rm -rf $(OBJDIR) 2>/dev/null || /bin/true
	rm $(EXECS) 2>/dev/null || /bin/true
	rm $(QUICKCHECKDIR)/flat_segment_tree $(QUICKCHECKDIR)/*.o 2>/dev/null || true

build-doc-doxygen:
	@echo "Building documentation by doxygen..."
	@cd doc && doxygen doxygen.conf

build-doc-sphinx:
	@echo "Building documentation by sphinx..."
	@sphinx-build -b html ./doc/ ./doc/_build

build-doc: build-doc-doxygen build-doc-sphinx

